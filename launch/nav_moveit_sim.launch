<launch>

    <arg name="world_name"                 default="items_on_ground"/>
    <arg name="robot_name"                 default="locobot"/>
    <arg name="robot_model"                default="locobot_wx200" />
    <arg name="show_lidar"                        default="true"/>
    <arg name="use_camera"                        default="false"/>
    <arg name="dof"                               default="5"/>
    <arg name="rtabmap_args"                      default=""/>
    <arg name="localization"                    default="true"/>
    <arg name="use_python_interface"            default="true"/>

    <rosparam file="$(find locobot_custom)/config/at_boundaries.yaml" command="load"/>
    <rosparam file="$(find locobot_custom)/config/facing_thresh.yaml" command="load"/>
    <rosparam file="$(find locobot_custom)/config/hold_thresh.yaml" command="load"/>
    <rosparam file="$(find locobot_custom)/config/sim_nav_goals.yaml" command="load"/>

    <include file="$(find interbotix_xslocobot_nav)/launch/xslocobot_nav_sim.launch"> 
        <arg name="robot_model"                 value="locobot_wx200" />
        <arg name="use_lidar"                   value="true" />
        <arg name="rtabmap_args"                value="$(arg rtabmap_args)" />
        <arg name="world_name"                  value="$(find locobot_custom)/worlds/$(arg world_name).world" />
        <arg name="use_trajectory_controllers"  value="true"/>
        <arg name="localization"                value="$(arg localization)"/>
        <arg name="use_rviz"                    value="true"/>
    </include>

    <include file="$(find interbotix_xslocobot_moveit)/launch/move_group.launch" ns="$(arg robot_name)">
        <arg name="robot_model"                       value="$(arg robot_model)"/>
        <arg name="robot_name"                        value="$(arg robot_name)"/>
        <arg name="show_lidar"                        value="$(arg show_lidar)"/>
        <arg name="dof"                               value="$(arg dof)"/>
        <arg name="use_camera"                        value="$(arg use_camera)"/>
        <arg name="publish_monitored_planning_scene"  value="true" />
    </include>

    <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rviz_config)/Default.rviz"/>
    <arg name="rviz_command_args" value="-d $(find locobot_custom)/rviz/locobot_moveit_base_compact.rviz" />
    <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
        args="$(arg rviz_command_args)" output="screen">
    </node>  -->

        <!-- 
        rviz 
    -->
    <!-- <arg name="rviz_command_args" value="-d $(find locobot_custom)/rviz/locobot_move_base+move_it_compact.rviz" />
    <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
        args="$(arg rviz_command_args)" output="screen">
        <rosparam command="load" file="$(find interbotix_xslocobot_moveit)/config/kinematics.yaml"/>
    </node> -->

    <!-- 
        rviz 
    -->
    <!-- <arg name="rviz_command_args" value="-f $(arg robot_name)/base_footprint -d $(find locobot_custom)/rviz/locobot_move_base+move_it.rviz" />
    <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
        args="$(arg rviz_command_args)" output="screen">
        <rosparam command="load" file="$(find interbotix_xslocobot_moveit)/config/kinematics.yaml"/>
    </node> -->

    <node if="$(arg use_python_interface)"
        name="moveit_python_interface"
        pkg="interbotix_moveit_interface"
        type="moveit_python_interface"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)">
        <rosparam command="load"                      file="$(find interbotix_xslocobot_moveit_interface)/config/$(arg robot_model).yaml"/>
        <param name="robot_model"                     value="$(arg robot_model)"/>
        <remap from="/attached_collision_object"      to="/$(arg robot_name)/attached_collision_object"/>
        <remap from="/collision_object"               to="/$(arg robot_name)/collision_object"/>
    </node>

    <!-- Services -->

    <!-- Predicate Services -->
    <node name="at" pkg="locobot_custom" type="at.py" output="screen" />
    <node name="facing" pkg="locobot_custom" type="facing.py" output="screen" />
    <node name="hold" pkg="locobot_custom" type="hold.py" output="screen" />
    <node name="contain" pkg="locobot_custom" type="contain.py" output="screen" />
    
    <!-- Action Execution Services -->
    <node name="approach_server" pkg="locobot_custom" type="approach_server.py" output="screen" />
    <node name="grasp_server" pkg="locobot_custom" type="grasp_server.py" output="screen" />
    <node name="grasp_pose_server" pkg="locobot_custom" type="grasp_pose_server.py" output="screen" />
    <node name="primitive_move_base_server" pkg="locobot_custom" type="primitive_move_base_server.py" output="screen" />
    
    <!-- MDP Services -->
    <node name="observation_server_gazebo" pkg="locobot_custom" type="observation_server_gazebo.py" output="screen" />

</launch>
